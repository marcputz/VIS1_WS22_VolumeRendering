precision highp float;
precision mediump sampler3D;

uniform sampler3D data;
uniform vec3 camera_position;
uniform float xWidth;
uniform float yHeight;
uniform float zDepth;

varying vec3 positionColor;
varying vec4 vertexLocalPosition;
varying vec4 vertexWorldPosition;
varying vec3 positionNearColor;
varying vec4 positionNear;

const int MAX_STEPS = 2048;
const float STEP_SIZE = 1.0;

void raycast_mip(vec3 startPos, vec3 step, int steps, vec3 rayDirection);
float getDensity(vec3 dataPosition);

void main(){
    vec3 ray_direction = normalize(positionNear.xyz - camera_position);

    gl_FragColor = vec4(ray_direction, 1.0);
}

void raycast_mip(vec3 startPos, vec3 step, int steps, vec3 rayDirection) {

}

float getDensity(vec3 dataPosition) {
    return texture(data, dataPosition).r;
}